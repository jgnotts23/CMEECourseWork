for (j in seq(1,15)){
x = neutral_generation(x)
}
if (unique(x) != 1){
counter = counter + 1
}
}
neutral_generation <- function(a){
gentime <- ceiling(sum(y)/2)
for (i in (1:gentime)){
a <- neutral_step(a)
}
return(a)
}
neutral_generation <- function(a){
gentime <- ceiling(sum(a)/2)
for (i in (1:gentime)){
a <- neutral_step(a)
}
return(a)
}
counter = 0
for (i in seq(1,100000)){
if (i %% 100 == 0){
print(i)
}
x = c(10,5,13)
for (j in seq(1,15)){
x = neutral_generation(x)
}
if (unique(x) != 1){
counter = counter + 1
}
}
counter = 0
for (i in seq(1,10000)){
if (i %% 100 == 0){
print(i)
}
x = c(10,5,13)
for (j in seq(1,15)){
x = neutral_generation(x)
}
if (unique(x) != 1){
counter = counter + 1
}
}
unique(x)
counter = 0
for (i in seq(1,10000)){
if (i %% 100 == 0){
print(i)
}
x = c(10,5,13)
for (j in seq(1,15)){
x = neutral_generation(x)
}
if (length(unique(x)) != 1){
counter = counter + 1
}
}
setwd("~/Documents/CMEECourseWork/Week4/Code")
source('~/.active-rstudio-document')
2*2+1
2*(2+1)
12/2^3
(12/2)^3
x <- 5
y <- 2
y
x2 <- x^2
x2
a <- x2+x
a
y2 <- y^2
z2 <- x2 + y2
z <- sqrt(z2)
print(z)
3>2
3 >= 3
4<2 #FALSE
myNumericVector <- c(1.3,2.5,1.9,3.4,5.6,1.4,3.1,2.9)
myCharacterVector <- c("low","low","low","low","high","high","high","high")
myLogicalVector <- c(TRUE,TRUE,FALSE,FALSE,TRUE,TRUE,FALSE,FALSE)
str(myNumericVector)
str(myCharacterVector)
str(myLogicalVector)
myMixedVector <- c(1, TRUE, FALSE, 3, "help", 1.2, TRUE, "notwhatIplanned")
str(myMixedVector)
library(lme4)
require(lme4)
library(lme4)
help("library")
help(getwd)
help(log)
sqrt(4); 4^0.5; log(0); log(1); log(10); log(Inf)
exp(1)
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
str(d)
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
str(d)
names(d)
head(d) #View first 5 rows
length(d$Tarsus)
hist(d$Tarsus) #Histogram
mean(d$Tarsus)
mean(d$Tarsus, na.rm = TRUE) #Strip NAs
median(d$Tarsus, na.rm = TRUE)
mode(d$Tarsus)
par(mfrow = c(2,2))
help("par")
hist(d$Tarsus, breaks=3, col="grey")
hist(d$Tarsus, breaks=10, col="grey")
hist(d$Tarsus, breaks=30, col="grey")
hist(d$Tarsus, breaks=100, col="grey")
require(modeest)
mlv(d$Tarsus)
?modeest
help(moodest)
help("moodest")
help.start(moodest)
help.start("moodest")
d2 <- subset(d, d$Tarsus!="NA")
length(d$Tarsus)
length(d2$Tarsus)
mlv(d$Tarsus)
mlv(d2$Tarsus)
range(d$Tarsus, na.rm=TRUE)
var(d$Tarsus, na.rm=TRUE)
var(d$Tarsus, na.rm=TRUE)
sum((d2$Tarsus - mean(d2$Tarsus))^2)/(length(d2$Tarsus) -1)
sqrt(var(d2$Tarsus))
sd(d2$Tarsus)
zTarsus <- (d2$Tarsus - mean(d2$Tarsus))/sd(d2$Tarsus)
var(zTarsus)
sd(zTarsus)
hist(zTarsus)
z.transform(d2$Tarsus)
set.seed(123)
znormal <- rnorm(1e+06)
hist(znormal, breaks=100)
summary(znormal)
qnorm(c(0.025, 0.975))
pnorm(.Last.value)
par(mfrow = c(1,2))
hist(znormal, breaks=100)
abline(v = qnorm(c(0.25, 0.5, 0.75)), lwd=2)
?abline
par(mfrow = c(1,2))
hist(znormal, breaks=100)
abline(v = qnorm(c(0.25, 0.5, 0.75)), lwd=2) #adds lines, v= x-value of vertical line
abline(v = qnorm(c(0.025, 0.975)), lwd = 2, lty = "dashed")
plot(density(znormal))
abline(v = qnorm(c(0.25, 0.5, 0.75)), col = "gray")
abline(v = qnorm(c(0.025, 0.975)), lty = "dotted", col = "black")
abline(h = 0, lwd = 3, col = "blue")
text(2, 0.3, "1.96", col = "red", asj = 0)
text(2, 0.3, "1.96", col = "red", adj = 0)
par(mfrow = c(1,2))
hist(znormal, breaks=100)
abline(v = qnorm(c(0.25, 0.5, 0.75)), lwd=2) #adds lines, v= x-value of vertical line, QUARTILES
abline(v = qnorm(c(0.025, 0.975)), lwd = 2, lty = "dashed")
plot(density(znormal))
abline(v = qnorm(c(0.25, 0.5, 0.75)), col = "gray")
abline(v = qnorm(c(0.025, 0.975)), lty = "dotted", col = "black")
abline(h = 0, lwd = 3, col = "blue")
text(2, 0.3, "1.96", col = "red", adj = 0)
text(-2, 0.3, "-1.96", col = "red", adj = 1)
boxplot(d$Tarsus~d$Sex.1, col=c("red", "blue"), ylab="Tarsus length (mm)")
View(d)
?boxplot
source('~/.active-rstudio-document')
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
View(d)
hist(d$Year)
par(mfrow = c(1))
par(mfrow = c(1)
)
par(mfrow = c(1,1))
hist(d$Year)
hist(d$BirdID)
hist(d$Sex)
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
sqrt(var(d$Tarsus, na.rm=TRUE)/length(d$Tarsus, na.rm=TRUE))
Tarsus <- subset(d, d$Tarsus!="NA")
sqrt(var(Tarsus)/length(Tarsus))
sqrt(var(Tarsus$Tarsus)/length(Tarsus$Tarsus))
Tarsus <- subset(d, d$Tarsus!="NA", d$Mass!="NA")
Mass <- subset(d, d$Mass!="NA")
Wing <- subset(d, d$Wing!="NA")
Bill <- subset(d, d$Bill!="NA")
rm(list=ls())
# Standard deviation describes the spread and variability of a distribution
# Standard error describes the precision of the data (i.e. how precise is the sample mean?)
# se  = sqrt(variance / n)
# Calculating SE
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
Tarsus <- subset(d, d$Tarsus!="NA")
Mass <- subset(Tarsus, d$Mass!="NA")
Wing <- subset(Mass, d$Wing!="NA")
d2 <- subset(Bill, d$Bill!="NA")
sqrt(var(d2$Tarsus)/length(d2$Tarsus))
sqrt(var(d2$Mass)/length(d2$Mass))
sqrt(var(d2$Wing)/length(d2$Wing))
sqrt(var(d2$Bill)/length(d2$Bill))
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
Tarsus <- subset(d, d$Tarsus!="NA")
Mass <- subset(Tarsus, d$Mass!="NA")
Wing <- subset(Mass, d$Wing!="NA")
d2 <- subset(Bill, d$Bill!="NA")
# Stats with sparrows 4
rm(list=ls())
# Standard deviation describes the spread and variability of a distribution
# Standard error describes the precision of the data (i.e. how precise is the sample mean?)
# se  = sqrt(variance / n)
# Calculating SE
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
Tarsus <- subset(d, d$Tarsus!="NA")
Mass <- subset(Tarsus, d$Mass!="NA")
Wing <- subset(Mass, d$Wing!="NA")
d2 <- subset(Wing, d$Bill!="NA")
sqrt(var(d2$Tarsus)/length(d2$Tarsus))
sqrt(var(d2$Mass)/length(d2$Mass))
sqrt(var(d2$Wing)/length(d2$Wing))
sqrt(var(d2$Bill)/length(d2$Bill))
rm(list=ls())
# Standard deviation describes the spread and variability of a distribution
# Standard error describes the precision of the data (i.e. how precise is the sample mean?)
# se  = sqrt(variance / n)
# Calculating SE
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
Tarsus <- subset(d, d$Tarsus!="NA")
Mass <- subset(Tarsus, d$Mass!="NA")
Wing <- subset(Mass, d$Wing!="NA")
Bill <- subset(Wing, d$Bill!="NA")
rm(list=ls())
# Standard deviation describes the spread and variability of a distribution
# Standard error describes the precision of the data (i.e. how precise is the sample mean?)
# se  = sqrt(variance / n)
# Calculating SE
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
Tarsus <- subset(d, d$Tarsus!="NA")
Mass <- subset(d, d$Mass!="NA")
Wing <- subset(d, d$Wing!="NA")
Bill <- subset(d, d$Bill!="NA")
sqrt(var(Tarsus$Tarsus)/length(Tarsus$Tarsus))
sqrt(var(Mass$Mass)/length(Mass$Mass))
sqrt(var(Wing$Wing)/length(Wing$Wing))
sqrt(var(Bill$Bill)/length(Bill$Bill))
str(d)
Tarsus2001 <- subset(Tarsus, d$Year=2001)
Tarsus2001 <- subset(Tarsus, d$Year==2001)
View(Tarsus2001)
Tarsus2001 <- subset(Tarsus, d$Year="2001")
Tarsus2001 <- subset(Tarsus, d$Year=="2001")
Tarsus2001 <- subset(Tarsus, d$Year=="2001")
Tarsus2001 <- subset(Tarsus, Tarsus$Year=="2001")
Tarsus2001 <- subset(Tarsus, Tarsus$Year==2001)
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
Tarsus <- subset(d, d$Tarsus!="NA")
Tarsus2001 <- subset(Tarsus, Tarsus$Year==2001)
Tarsus2001 <- subset(Tarsus, Tarsus2001$Year==2001)
Tarsus2001 <- subset(Tarsus, Tarsus$Year="2001")
Tarsus2001 <- subset(Tarsus, Tarsus$Year==2001)
Tarsus2001 <- subset(Tarsus, Tarsus$Year=="2001")
Tarsus2001 <- subset(d, d$Year=="2001")
d2001 <- subset(d, d$Year=="2001")
View(Tarsus2001)
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
d2001 <- subset(d, d$Year=="2001")
Tarsus2001 <- subset(d2001, d2001$Tarsus!="NA")
Mass2001 <- subset(d2001, d2001$Mass!="NA")
Wing2001 <- subset(d2001, d2001$Wing!="NA")
Bill2001 <- subset(d2001, d2001$Bill!="NA")
sqrt(var(Tarsus2001$Tarsus2001)/length(Tarsus2001$Tarsus2001))
sqrt(var(Mass2001$Mass2001)/length(Mass2001$Mass2001))
sqrt(var(Wing2001$Wing2001)/length(Wing2001$Wing2001))
sqrt(var(Bill2001$Bill2001)/length(Bill2001$Bill2001))
sqrt(var(Tarsus2001$Tarsus)/length(Tarsus2001$Tarsus))
sqrt(var(Mass2001$Mass)/length(Mass2001$Mass))
sqrt(var(Wing2001$Wing)/length(Wing2001$Wing))
sqrt(var(Bill2001$Bill)/length(Bill2001$Bill))
Bill2001 <- subset(d2001, d2001$Bill!="NA")
View(Bill2001)
summary(Mass2001)
summary(Mass2001$Mass)
qnorm(c(0.025, 0.975))
qnorm(Mass2001$Mass
)
qnorm(Mass2001$Mass)
set.seed(123) #start random number gen sequence
znormal <- rnorm(1e+06)
hist(znormal, breaks=100)
summary(znormal) #find quartiles and averages
qnorm(c(0.025, 0.975))
summary(Mass2001$Mass)
?qnorm
quantile(Mass2001$Mass, probs=c(0.025, 0.975))
quantile(Tarsus$Tarsus, probs=c(0.025, 0.975))
quantile(Mass$Mass, probs=c(0.025, 0.975))
quantile(Wing$Wing, probs=c(0.025, 0.975))
quantile(Bill$Bill, probs=c(0.025, 0.975))
rm(list=ls())
# Standard deviation describes the spread and variability of a distribution
# Standard error describes the precision of the data (i.e. how precise is the sample mean?)
# se  = sqrt(variance / n)
# Calculating SE
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
Tarsus <- subset(d, d$Tarsus!="NA")
Mass <- subset(d, d$Mass!="NA")
Wing <- subset(d, d$Wing!="NA")
Bill <- subset(d, d$Bill!="NA")
sqrt(var(Tarsus$Tarsus)/length(Tarsus$Tarsus))
sqrt(var(Mass$Mass)/length(Mass$Mass))
sqrt(var(Wing$Wing)/length(Wing$Wing))
sqrt(var(Bill$Bill)/length(Bill$Bill))
d2001 <- subset(d, d$Year=="2001")
Tarsus2001 <- subset(d2001, d2001$Tarsus!="NA")
Mass2001 <- subset(d2001, d2001$Mass!="NA")
Wing2001 <- subset(d2001, d2001$Wing!="NA")
Bill2001 <- subset(d2001, d2001$Bill!="NA")
sqrt(var(Tarsus2001$Tarsus)/length(Tarsus2001$Tarsus))
sqrt(var(Mass2001$Mass)/length(Mass2001$Mass))
sqrt(var(Wing2001$Wing)/length(Wing2001$Wing))
sqrt(var(Bill2001$Bill)/length(Bill2001$Bill))
quantile(Tarsus$Tarsus, probs=c(0.025, 0.975))
quantile(Mass$Mass, probs=c(0.025, 0.975))
quantile(Wing$Wing, probs=c(0.025, 0.975))
quantile(Bill$Bill, probs=c(0.025, 0.975))
quantile(Tarsus2001$Tarsus, probs=c(0.025, 0.975))
quantile(Mass2001$Mass, probs=c(0.025, 0.975))
quantile(Wing2001$Wing, probs=c(0.025, 0.975))
quantile(Bill2001$Bill, probs=c(0.025, 0.975))
source('~/.active-rstudio-document')
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
d1 <- subset(d, d$Year==2001)
t.test(d1$Tarsus, mu=18.5, na.rm=TRUE)
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
d1 <- subset(d, d$Year==2001)
t.test(d1$Tarsus, mu=18.5, na.rm=TRUE)
t.test(d1$Tarsus~d1$Sex, na.rm=TRUE)
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
d1 <- subset(d, d$Year==2001)
t.test(d1$Tarsus~d1$Sex, na.rm=TRUE)
t.test(d$Tarsus~d$Sex, na.rm=TRUE)
library(pwr)
install.packages("pwr")
library(pwr)
# Statistical power - probability to detect an effect of specific size
# To calculate:
## Mean in each group (make one 0, the other the difference, 0.16)
## N (sample size, what we want to find out)
## sd of combined groups (0.96)
## Power level (80% usually ok)
pwr.t.test(d=(0-0.16)/0.96, power=.8, sig.level=.05, type="two.sample", alternative="two.sided")
# Statistical power - probability to detect an effect of specific size
# To calculate:
## Mean in each group (make one 0, the other the difference, 0.16)
## N (sample size, what we want to find out)
## sd of combined groups (0.96)
## Power level (80% usually ok, type II error chance 20%)
pwr.t.test(d=(0-0.16)/0.96, power=.9, sig.level=.05, type="two.sample", alternative="two.sided")
# Statistical power - probability to detect an effect of specific size
# To calculate:
## Mean in each group (make one 0, the other the difference, 0.16)
## N (sample size, what we want to find out)
## sd of combined groups (0.96)
## Power level (80% usually ok, type II error chance 20%)
pwr.t.test(d=(0-0.16)/0.96, power=1, sig.level=.05, type="two.sample", alternative="two.sided")
# Statistical power - probability to detect an effect of specific size
# To calculate:
## Mean in each group (make one 0, the other the difference, 0.16)
## N (sample size, what we want to find out)
## sd of combined groups (0.96)
## Power level (80% usually ok, type II error chance 20%)
pwr.t.test(d=(0-0.16)/0.96, power=.99, sig.level=.05, type="two.sample", alternative="two.sided")
x <- c(1, 2, 3, 4, 8)
y <- c(4, 3, 5, 7, 9)
rm(list=ls())
x <- c(1, 2, 3, 4, 8)
y <- c(4, 3, 5, 7, 9)
model1 <- (lm(y~x))
model1
rm(list=ls())
model1 <- (lm(y~x))
x <- c(1, 2, 3, 4, 8)
y <- c(4, 3, 5, 7, 9)
model1 <- (lm(y~x))
summary(model1)
anova(model1)
resid(model1)
cov(x,y)
var(x)
plot(y~x)
(list=ls())
rm(list=ls())
source('~/.active-rstudio-document')
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
lm(formula = Mass ~ Tarsus, data = d)
# t-tests can be used to see if a calculated slope is different from 0
# Data can be standardised (e.g. z-transform) so the intercept becomes meaningful (mean of y)
plot(d$Mass~d$Tarsus, ylab="Mass (g)", xlab="Tarsus (mm)", pch=19, cex=0.4)
# t-tests can be used to see if a calculated slope is different from 0
# Data can be standardised (e.g. z-transform) so the intercept becomes meaningful (mean of y)
plot(d$Mass~d$Tarsus, ylab="Mass (g)", xlab="Tarsus (mm)", pch=19, cex=0.4, ylim=c(-5,38), xlim=c(0,22))
# t-tests can be used to see if a calculated slope is different from 0
# Data can be standardised (e.g. z-transform) so the intercept becomes meaningful (mean of y)
plot(d$Mass~d$Tarsus, ylab="Mass (g)", xlab="Tarsus (mm)", pch=19, cex=0.4)
d1 <- subset(d, d$Mass!="NA")
d2 <- subset(d1, d1$Tarsus!="NA")
length(d2$Tarsus)
model1 <- lm(Mass~Tarsus, data=d2)
summary(model1)
hist(model1$residuals)
# If R^2 equalled 1, you'd see a straight line:
model2 <- lm(y~x)
x <- c(1, 2, 3, 4, 8)
y <- c(4, 3, 5, 7, 9)
model2 <- lm(y~x)
summary(model2)
# With z-scores of Tarsus
d2$z.Tarsus <- scale(d2$Tarsus)
model3 <- lm(Mass~z.Tarsus, data=d2)
summary(model3)
plot(d2$Mass~d2$z.Tarsus, pch=19, cex=0.4)
abline(v = 0, lty = "dotted")
# What does the slope mean now?
d$Sex <- as.numeric(d$Sex)
par(mfrow = c(1,2))
plot(d$Wing ~ d$Sex.1, ylab="Wing(mm)")
plot(d$Wing ~ d$Sex, xlab="Sex", xlim=c(-0.1,1.1), ylab="")
abline(lm(d$Wing ~ d$Sex), lwd=2)
text(0.15, 76, "intercept")
text(0.9, 77.5, "slope", col="red")
m4 <- lm(Wing~Sex, data=d4)
# t-test for linear models
d4 <- subset(d, d$Wing!="NA")
m4 <- lm(Wing~Sex, data=d4)
t4 <- t.test(d4$Wing~d4$Sex, var.equal=TRUE)
summary(m4)
t4
# Are the residuals normally distributed?
par(mfrow=c(2,2))
plot(model3)
par(mfrow=c(2,2))
plot(m4)
# Stats with sparrows 10
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
cov(d$Mass, d$Tarsus, use="complete.obs")
cor(d$Mass, d$Tarsus, use="complete.obs")
cov(d$Mass, (d$Tarsus/10), use="complete.obs")
cov(d$Mass, (d$Tarsus/10), use="complete.obs") #covariance
cor(d$Mass, (d$Tarsus/10), use="complete.obs") #correlation
source('~/.active-rstudio-document')
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
ai <- c(1,1,2,1,1,1)
bi <- c(3,3,4,3,3,3)
ci <- c(5,5,4,5,5,1)
anova(lm(ai~as.factor(bi)))
anova(lm(ai~as.factor(ci)))
# Sparrow example
d1 <- subset(d, d$Wing!="NA")
summary(d1$Wing)
hist(d1$Wing)
model1 <- lm(Wing~Sex.1, data=d1)
summary(model1)
boxplot(d1$Wing~d1Sex.1, ylab="Wing length (mm)")
boxplot(d1$Wing~d1$Sex.1, ylab="Wing length (mm)")
anova(model1)
# Now we know wing length differs between sexes, but by how much?
# t-test (analyses run after main analysis are called "post-hoc" tests)
t.test(d1$Wing~d1$Sex.1, var.equal=TRUE)
boxplot(d1$Wing~d1$BirdID, ylab="Wing length (mm)")
boxplot(d1$Wing~d1$BirdID, ylab="Wing length (mm)")
par(mfrow = c(1,1))
boxplot(d1$Wing~d1$BirdID, ylab="Wing length (mm)")
require(dplyr)
tbl_df(d1)
glimpse(d1)
d$Mass %>% cor.test(d$Tarsus, na.rm=TRUE)
d1 %>%
group_by(BirdID) %>%
summarise (count=length(BirdID))
count(d1, BirdID)
d1 %>%
group_by(BirdID) %>% #group
summarise (count=length(BirdID))
count(count)
d1 %>%
group_by(BirdID) %>% #group
summarise (count=length(BirdID)) %>%
count(count)
model3 <- lm(Wing~as.factor(BirdID), data=d1)
anova(model3)
boxplot(d$Mass~d$Year)
m2 <- lm(d$Mass~as.factor(d$Year))
anova(m2)
summary(m2)
rm(list=ls())
d <- read.table("../Data/SparrowSize.txt", header=TRUE)
d1 <- subset(d, d$Wing!="NA")
model3 <- lm(Wing~as.factor(BirdID), data=d1)
anova(model3)
