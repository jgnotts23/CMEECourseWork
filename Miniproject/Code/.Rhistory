for (j in seq(1,15)){
x = neutral_generation(x)
}
if (unique(x) != 1){
counter = counter + 1
}
}
neutral_generation <- function(a){
gentime <- ceiling(sum(y)/2)
for (i in (1:gentime)){
a <- neutral_step(a)
}
return(a)
}
neutral_generation <- function(a){
gentime <- ceiling(sum(a)/2)
for (i in (1:gentime)){
a <- neutral_step(a)
}
return(a)
}
counter = 0
for (i in seq(1,100000)){
if (i %% 100 == 0){
print(i)
}
x = c(10,5,13)
for (j in seq(1,15)){
x = neutral_generation(x)
}
if (unique(x) != 1){
counter = counter + 1
}
}
counter = 0
for (i in seq(1,10000)){
if (i %% 100 == 0){
print(i)
}
x = c(10,5,13)
for (j in seq(1,15)){
x = neutral_generation(x)
}
if (unique(x) != 1){
counter = counter + 1
}
}
unique(x)
counter = 0
for (i in seq(1,10000)){
if (i %% 100 == 0){
print(i)
}
x = c(10,5,13)
for (j in seq(1,15)){
x = neutral_generation(x)
}
if (length(unique(x)) != 1){
counter = counter + 1
}
}
data <- read.csv("~/Desktop/leah_data.csv")
View(data)
data <- read.csv("~/Desktop/leah_data.csv", header=TRUE)
read.csv?
)
help("read.csv")
data <- read.csv("~/Desktop/leah_data.csv", header=TRUE)
View(data)
View(data)
library("MASS")
print(str(data))
## Cross-tabulation ##
fourandsix <- data.frame(data$Source, data$Care)
View(fourandsix)
fourandsix = table(data$Source, data$Care)
print(fourandsix)
print(chisq.test(fourandsix))
sixandten <- data.frame(data$Care, data$Relationship) ##subset
sixandten = table(data$Care, data$Relationship) ##cross-tabulate
print(sixandten) ##view cross-tabulation
print(chisq.test(sixandten)) ##chi-squared
sevenandten <- data.frame(data$Care_reason, data$Relationship) ##subset
sevenandten = table(data$Care_reason, data$Relationship) ##cross-tabulate
print(sevenandten) ##view cross-tabulation
print(chisq.test(sevenandten)) ##chi-squared
financeandsix <- data.frame(data$Finance, data$Care) ##subset
financeandsix = table(data$Finance, data$Care) ##cross-tabulate
print(financeandsix) ##view cross-tabulation
print(chisq.test(financeandsix)) ##chi-squared
rm(list=ls())
MySample <- rnorm(10, m=0, sd=1)
MySample
hist(MySample)
# Probability of getting a value of 1 or -1 from a normally-distributed random number
# with mean 0 and sd = 1:
dnorm(1, m=0, sd=1)
dnorm(-1, m=0, sd=1)
# Probability of getting large value with same distribution:
dnorm(10, m=0, sd=1)
dnorm(100, m=0, sd=1)
# Testing rule 1 using R:
MySample5 <- rnorm(5, m=0, sd=1)
source('~/leah.R')
View(data)
convenienceandsix <- data.frame(data$Convenience, data$Care) ##subset
convenienceandsix = table(data$Convenience, data$Care) ##cross-tabulate
print(convenienceandsix) ##view cross-tabulation
print(chisq.test(convenienceandsix)) ##chi-squared
damageandsix <- data.frame(data$Damage, data$Care) ##subset
damageandsix = table(data$Damage, data$Care) ##cross-tabulate
print(damageandsix) ##view cross-tabulation
print(chisq.test(damageandsix)) ##chi-squared
welfareandsix <- data.frame(data$Welfare, data$Care) ##subset
welfareandsix = table(data$Welfare, data$Care) ##cross-tabulate
print(welfareandsix) ##view cross-tabulation
print(chisq.test(welfareandsix)) ##chi-squared
securityandsix <- data.frame(data$Security, data$Care) ##subset
securityandsix = table(data$Security, data$Care) ##cross-tabulate
print(securityandsix) ##view cross-tabulation
print(chisq.test(securityandsix)) ##chi-squared
### Finance vs. Day care option ###
financeandsix <- data.frame(data$Finance, data$Care) ##subset
financeandsix = table(data$Finance, data$Care) ##cross-tabulate
print(financeandsix) ##view cross-tabulation
print(chisq.test(financeandsix)) ##chi-squared
### Convenience vs. Day care option ###
convenienceandsix <- data.frame(data$Convenience, data$Care) ##subset
convenienceandsix = table(data$Convenience, data$Care) ##cross-tabulate
print(convenienceandsix) ##view cross-tabulation
print(chisq.test(convenienceandsix)) ##chi-squared
### Damage vs. Day care option ###
damageandsix <- data.frame(data$Damage, data$Care) ##subset
damageandsix = table(data$Damage, data$Care) ##cross-tabulate
print(damageandsix) ##view cross-tabulation
print(chisq.test(damageandsix)) ##chi-squared
### Welfare vs. Day care option ###
welfareandsix <- data.frame(data$Welfare, data$Care) ##subset
welfareandsix = table(data$Welfare, data$Care) ##cross-tabulate
print(welfareandsix) ##view cross-tabulation
print(chisq.test(welfareandsix)) ##chi-squared
### Security vs. Day care option ###
securityandsix <- data.frame(data$Security, data$Care) ##subset
securityandsix = table(data$Security, data$Care) ##cross-tabulate
print(securityandsix) ##view cross-tabulation
print(chisq.test(securityandsix)) ##chi-squared
source('~/leah.R')
source('~/leah.R')
library("ggplot2")
source('~/leah.R')
warnings()
### Visualisation ###
qplot(Alone_time, data=data)
### Visualisation ###
qplot(as.factor(Alone_time), data=data)
### Visualisation ###
qplot(as.factor(Alone_time)), data=data, colour = as.factor(Alone_time))
### Visualisation ###
ggplot(as.factor(Alone_time)), data=data, colour = as.factor(Alone_time))
### Visualisation ###
ggplot(as.factor(Alone_time)), data=data)
### Visualisation ###
ggplot(as.factor(Alone_time)), data=data)
### Visualisation ###
ggplot(as.factor(Alone_time), data=data, colour = as.factor(Alone_time))
### Visualisation ###
ggplot(as.factor(Alone_time), data=data)
### Visualisation ###
qplot(as.factor(Alone_time), data=data)
?qplot
### Visualisation ###
qplot(as.factor(Alone_time), data=data, colour=cyl)
### Visualisation ###
qplot(as.factor(Alone_time), data=data, colour="cyl")
### Visualisation ###
qplot(as.factor(Alone_time), data=data, colour="red")
### Visualisation ###
qplot(as.factor(Alone_time), data=data, colour="red")
### Visualisation ###
qplot(as.factor(Alone_time), data=data, colour=red)
### Visualisation ###
qplot(as.factor(Alone_time), data=data, fill="red")
### Visualisation ###
qplot(as.factor(Alone_time), data=data, fill=Alone_time)
### Visualisation ###
qplot(as.factor(Alone_time), data=data, fill=as.factor(Alone_time))
### Visualisation ###
qplot(as.factor(Alone_time), data=data, fill=as.factor(Alone_time), xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
bp <- qplot(as.factor(Alone_time), data=data, fill=as.factor(Alone_time), xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
### Visualisation ###
bp <- qplot(as.factor(Alone_time), data=data, fill=as.factor(Alone_time), alpha = I(0.5), xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
### Visualisation ###
bp <- qplot(as.factor(Alone_time), data=data, fill=as.factor(Alone_time), alpha = I(0.7), xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
### Visualisation ###
bp <- qplot(as.factor(Alone_time), data=data, colour="black", fill=as.factor(Alone_time), alpha = I(0.7), xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
### Visualisation ###
bp <- qplot(as.factor(Alone_time), data=data, fill=as.factor(Alone_time), alpha = I(0.7), xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
### Visualisation ###
bp <- qplot(as.factor(Alone_time), data=data, colour=Interaction, fill=as.factor(Alone_time), alpha = I(0.7), xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
### Visualisation ###
bp <- qplot(as.factor(Alone_time), data=data, colour=Interaction, xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
### Visualisation ###
bp <- qplot(as.factor(Alone_time), data=data, fill=as.factor(Alone_time), alpha = I(0.7), xlab="Time left alone (hours/week)",
ylab="Number of responses")
bp + guides(fill=FALSE)
rm(list=ls())
graphics.off()
library("ggplot2")
library("MASS")
data <- read.csv("~/Desktop/leah_data.csv", header=TRUE)
load("~/Documents/CMEECourseWork/Week9/Output1.rda")
View(input_params)
load("~/Documents/CMEECourseWork/Week9/Output2.rda")
View(input_params)
View(input_params)
View(input_params)
View(input_params)
load("~/Documents/CMEECourseWork/Week9/Output3.rda")
View(input_params)
source('~/Downloads/graphs.R')
setwd("~/Documents/CMEECourseWork/Miniproject/Code")
fitted_data <- read.csv("../Data/proper_fit.csv")
summary(fitted_data)
fitted_data <- read.csv("../Data/proper_fit.csv")
summary(fitted_data)
fitted_data <- read.csv("../Data/proper_fit.csv")
summary(fitted_data)
fitted_data <- read.csv("../Data/proper_fit.csv")
summary(fitted_data)
fitted_data <- read.csv("../Data/proper_fit.csv")
summary(fitted_data)
# Read in fitted data
wrangled <- read.csv("../Data/bio_wrangled.csv")
View(wrangled)
# Plots
i <- "MTD2143"
Kelvin <- wrangled$ConTemp[bio$FinalID==i] + 273.15 #Kelvin
trait <- wrangled$OriginalTraitValue[bio$FinalID==i]
Kelvin <- wrangled$ConTemp[wrangled$FinalID==i] + 273.15 #Kelvin
trait <- wrangled$OriginalTraitValue[wrangled$FinalID==i]
plot(Kelvin, trait)
library(ggplot2)
datset <- wrangled$FinalID==i
datset <- wrangled[wrangled$FinalID==i]
dataset <- wrangled[wrangled$FinalID==i]
View(dataset)
dataset <- wrangled[i, ]
View(dataset)
View(wrangled)
dataset <- wrangled[FinalID==i, ]
dataset <- wrangled[wrangled$FinalID==i, ]
View(dataset)
ggplot(datset, aes(ConTemp, OriginalTraitValue)), + geom_point()
ggplot(datset, aes(ConTemp, OriginalTraitValue)) + geom_point()
ggplot(dataset, aes(ConTemp, OriginalTraitValue)) + geom_point()
x <- seq(min(dataset$ConTemp), max(dataset$Contemp), 50)
x <- seq(min(dataset$ConTemp), max(dataset$ConTemp), 50)
x
seq?
/
?seq
x <- seq(min(dataset$ConTemp), max(dataset$ConTemp), 1)
x
x <- seq(min(dataset$ConTemp), max(dataset$ConTemp), 0.5)
x
x <- seq(min(dataset$ConTemp), max(dataset$ConTemp), 0.1)
optima <- fitted_data[fitted_data$FinalID==i, ]
View(optima)
# Optimised params
B0 <- optima$B0
# Optimised params
x <- seq(min(dataset$ConTemp), max(dataset$ConTemp), 0.1)
cub_y <- optima$B0 + (optima$B1*x) + (optima$B2*x^2) + (optima$B3*x^3)
cub_y
p <- ggplot(dataset, aes(ConTemp, OriginalTraitValue)) + geom_point()
p + geom_abline(x, cub_y)
p + geom_abline(aes(x, cub_y))
p + geom_line(cub_y, aes(x))
?data.frame
cub <- data.frame(x, cub_y)
View(cub)
p + geom_line(dub, aes(x, cub_y))
p + geom_line(cub, aes(x, cub_y))
p <- ggplot(dataset, aes(ConTemp, OriginalTraitValue)) + geom_point()
p <- ggplot(dataset, aes(ConTemp, OriginalTraitValue)) + geom_point()
p
p + geom_line(cub, aes(x, cub_y))
p + geom_line(cub, aes(x, cub_y)) + geom_point()
p + geom_point(cub, aes(x, cub_y))
p + geom_point(data=cub, mapping=aes(x, cub_y))
p + geom_line(data=cub, mapping=aes(x, cub_y))
p + geom_line(mapping=aes(x, cub_y))
data=cub,
p + geom_line(data=cub, mapping=aes(x, cub_y))
Briere_y <- (optima$B0_Briere*x*(x-optima$T0))*(abs(optima$Tm-x)^(1/2)
)
Briere_y
cub <- data.frame(x, cub_y, Briere_y)
p + geom_line(data=cub, mapping=aes(x, Briere_y))
p + geom_line(data=cub, mapping=aes(x, cub_y))
+ geom_line(data=cub, mapping=aes(x, Briere_y))
p + geom_line(aes(cub_y))
p + geom_line(aes(x, cub_y))
p + geom_line(data=cub, mapping=aes(x, cub_y))
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red')
+ geom_line(data=cub, mapping=aes(x, Briere_y), col='blue')
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue')
k <- 8.617e-5
School_y = (optima$B0_School*(exp((-optima$E/k)*((1/x)-(1/283.15))))) / (1 + (exp(optima$Eh/k*((1/optima$Th)-(1/x)))))
cub <- data.frame(x, cub_y, Briere_y, School_y)
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green')
View(fitted_data)
# Plots
i <- "MTD2092"
dataset <- wrangled[wrangled$FinalID==i, ]
optima <- fitted_data[fitted_data$FinalID==i, ]
# Optimised params
x <- seq(min(dataset$ConTemp), max(dataset$ConTemp), 0.1)
cub_y <- optima$B0 + (optima$B1*x) + (optima$B2*x^2) + (optima$B3*x^3)
Briere_y <- (optima$B0_Briere*x*(x-optima$T0))*(abs(optima$Tm-x)^(1/2))
School_y = (optima$B0_School*(exp((-optima$E/k)*((1/x)-(1/283.15))))) / (1 + (exp(optima$Eh/k*((1/optima$Th)-(1/x)))))
cub <- data.frame(x, cub_y, Briere_y, School_y)
p <- ggplot(dataset, aes(ConTemp, OriginalTraitValue)) + geom_point()
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green')
x_K <- x - 273.15
cub_y <- optima$B0 + (optima$B1*x_K) + (optima$B2*x_K^2) + (optima$B3*x_K^3)
Briere_y <- (optima$B0_Briere*x*(x-optima$T0))*(abs(optima$Tm-x)^(1/2))
School_y = (optima$B0_School*(exp((-optima$E/k)*((1/x)-(1/283.15))))) / (1 + (exp(optima$Eh/k*((1/optima$Th)-(1/x)))))
cub <- data.frame(x, cub_y, Briere_y, School_y)
p <- ggplot(dataset, aes(ConTemp + 273.15, OriginalTraitValue)) + geom_point()
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green')
x_K <- x + 273.15
cub_y <- optima$B0 + (optima$B1*x_K) + (optima$B2*x_K^2) + (optima$B3*x_K^3)
Briere_y <- (optima$B0_Briere*x*(x-optima$T0))*(abs(optima$Tm-x)^(1/2))
School_y = (optima$B0_School*(exp((-optima$E/k)*((1/x)-(1/283.15))))) / (1 + (exp(optima$Eh/k*((1/optima$Th)-(1/x)))))
cub <- data.frame(x, cub_y, Briere_y, School_y)
p <- ggplot(dataset, aes(ConTemp + 273.15, OriginalTraitValue)) + geom_point()
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green')
View(wrangled)
fitted_data <- read.csv("../Data/proper_fit.csv")
# Plots
i <- "MTD2092"
dataset <- wrangled[wrangled$FinalID==i, ]
optima <- fitted_data[fitted_data$FinalID==i, ]
View(fitted_data)
summary(fitted_data)
# Plots
i <- "MTD2092"
dataset <- wrangled[wrangled$FinalID==i, ]
optima <- fitted_data[fitted_data$FinalID==i, ]
# Optimised params
x <- seq(min(dataset$ConTemp), max(dataset$ConTemp), 0.1)
x_K <- x + 273.15
cub_y <- optima$B0 + (optima$B1*x_K) + (optima$B2*x_K^2) + (optima$B3*x_K^3)
Briere_y <- (optima$B0_Briere*x*(x-optima$T0))*(abs(optima$Tm-x)^(1/2))
School_y = (optima$B0_School*(exp((-optima$E/k)*((1/x)-(1/283.15))))) / (1 + (exp(optima$Eh/k*((1/optima$Th)-(1/x)))))
cub <- data.frame(x, cub_y, Briere_y, School_y)
p <- ggplot(dataset, aes(ConTemp + 273.15, OriginalTraitValue)) + geom_point()
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green')
source('~/Documents/CMEECourseWork/Miniproject/Code/data_wrangling.R')
View(bio)
# Read in fitted data
wrangled <- read.csv("../Data/bio_wrangled.csv")
library(ggplot2)
k <- 8.617e-5
fitted_data <- read.csv("../Data/proper_fit.csv")
# Plots
i <- "MTD2092"
dataset <- wrangled[wrangled$FinalID==i, ]
optima <- fitted_data[fitted_data$FinalID==i, ]
# Optimised params
x <- seq(min(dataset$Kelvin), max(dataset$Kelvin), 0.1)
cub_y <- optima$B0 + (optima$B1*x) + (optima$B2*x^2) + (optima$B3*x_K^3)
Briere_y <- (optima$B0_Briere*x*(x-optima$T0))*(abs(optima$Tm-x)^(1/2))
School_y = (optima$B0_School*(exp((-optima$E/k)*((1/x)-(1/283.15))))) / (1 + (exp(optima$Eh/k*((1/optima$Th)-(1/x)))))
cub <- data.frame(x, cub_y, Briere_y, School_y)
p <- ggplot(dataset, aes(ConTemp + 273.15, OriginalTraitValue)) + geom_point()
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green')
cub_y <- optima$B0 + (optima$B1*x) + (optima$B2*x^2) + (optima$B3*x_K^3)
cub_y <- optima$B0 + (optima$B1*x) + (optima$B2*x^2) + (optima$B3*x^3)
Briere_y <- (optima$B0_Briere*x*(x-optima$T0))*(abs(optima$Tm-x)^(1/2))
School_y = (optima$B0_School*(exp((-optima$E/k)*((1/x)-(1/283.15))))) / (1 + (exp(optima$Eh/k*((1/optima$Th)-(1/x)))))
cub <- data.frame(x, cub_y, Briere_y, School_y)
p <- ggplot(dataset, aes(ConTemp + 273.15, OriginalTraitValue)) + geom_point()
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green')
p <- ggplot(dataset, aes(ConTemp, OriginalTraitValue)) + geom_point()
p <- ggplot(dataset, aes(Kelvin, OriginalTraitValue)) + geom_point()
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green')
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green') +
scale_colour_manual(name = 'Models',
guide = 'legend',
values = c('Cubic' = 'red',
'Briere' = 'blue'),
labels = c('SMA(50)',
'SMA(200)'))
p <- ggplot(dataset, aes(Kelvin, OriginalTraitValue)) + geom_point()
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green') +
scale_colour_manual(name = 'Models',
guide = 'legend',
values = c('MA50' = 'red',
'MA200' = 'blue'),
labels = c('SMA(50)',
'SMA(200)'))
p + geom_line(data=cub, mapping=aes(x, cub_y), col='red') +
geom_line(data=cub, mapping=aes(x, Briere_y), col='blue') +
geom_line(data=cub, mapping=aes(x, School_y), col='green') +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
p + geom_line(data=cub, mapping=aes(x, cub_y, col='red')) +
geom_line(data=cub, mapping=aes(x, Briere_y, col='blue')) +
geom_line(data=cub, mapping=aes(x, School_y, col='green')) +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
p + geom_line(data=cub, mapping=aes(x, cub_y, col='red')) +
geom_line(data=cub, mapping=aes(x, Briere_y, col='blue')) +
geom_line(data=cub, mapping=aes(x, School_y, col='green')) +
ggtitle(i) +
xlab("Temp (Kelvin)") + ylab("Metabolic Trait") +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
theme_update(plot.title = element_text(hjust = 0.5))
p + geom_line(data=cub, mapping=aes(x, cub_y, col='red')) +
geom_line(data=cub, mapping=aes(x, Briere_y, col='blue')) +
geom_line(data=cub, mapping=aes(x, School_y, col='green')) +
ggtitle(i) +
xlab("Temp (Kelvin)") + ylab("Metabolic Trait") +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
p <- ggplot(dataset, aes(Kelvin, OriginalTraitValue)) + geom_point(shape=4)
p + geom_line(data=cub, mapping=aes(x, cub_y, col='red')) +
geom_line(data=cub, mapping=aes(x, Briere_y, col='blue')) +
geom_line(data=cub, mapping=aes(x, School_y, col='green')) +
ggtitle(i) +
xlab("Temp (Kelvin)") + ylab("Metabolic Trait") +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
p <- ggplot(dataset, aes(Kelvin, OriginalTraitValue)) + geom_point(shape=4, size=2)
p
p + geom_line(data=cub, mapping=aes(x, cub_y, col='red')) +
geom_line(data=cub, mapping=aes(x, Briere_y, col='blue')) +
geom_line(data=cub, mapping=aes(x, School_y, col='green')) +
ggtitle(i) +
xlab("Temp (Kelvin)") + ylab("Metabolic Trait") +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
paste("../Results/", i, ".pdf", sep="", collapse="")
source('~/Documents/CMEECourseWork/Miniproject/Code/visualisation.R')
pdf(paste("../Results/", i, ".pdf", sep="", collapse=""))
p <- ggplot(dataset, aes(Kelvin, OriginalTraitValue)) + geom_point(shape=4, size=2)
p + geom_line(data=cub, mapping=aes(x, cub_y, col='red')) +
geom_line(data=cub, mapping=aes(x, Briere_y, col='blue')) +
geom_line(data=cub, mapping=aes(x, School_y, col='green')) +
ggtitle(i) +
xlab("Temp (Kelvin)") + ylab("Metabolic Trait") +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
graphics.off()
jpeg(paste("../Results/", i, ".pdf", sep="", collapse=""))
p <- ggplot(dataset, aes(Kelvin, OriginalTraitValue)) + geom_point(shape=4, size=2)
p + geom_line(data=cub, mapping=aes(x, cub_y, col='red')) +
geom_line(data=cub, mapping=aes(x, Briere_y, col='blue')) +
geom_line(data=cub, mapping=aes(x, School_y, col='green')) +
ggtitle(i) +
xlab("Temp (Kelvin)") + ylab("Metabolic Trait") +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
graphics.off()
jpeg(paste("../Results/", i, ".jpeg", sep="", collapse=""))
p <- ggplot(dataset, aes(Kelvin, OriginalTraitValue)) + geom_point(shape=4, size=2)
p + geom_line(data=cub, mapping=aes(x, cub_y, col='red')) +
geom_line(data=cub, mapping=aes(x, Briere_y, col='blue')) +
geom_line(data=cub, mapping=aes(x, School_y, col='green')) +
ggtitle(i) +
xlab("Temp (Kelvin)") + ylab("Metabolic Trait") +
scale_color_discrete(name = "Models", labels = c("Cubic", "Briere", "Schoolfield"))
graphics.off()
source('~/Documents/CMEECourseWork/Miniproject/Code/visualisation.R')
View(wrangled)
source('~/Documents/CMEECourseWork/Miniproject/Code/visualisation.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/visualisation.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/visualisation.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/visualisation.R')
source('~/Documents/CMEECourseWork/Miniproject/Code/visualisation.R')
